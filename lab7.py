# -*- coding: utf-8 -*-
"""lab7

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1b3vXKzySsp6cten6iL6Nna6Mzfe9x-V1
"""

#task1
def even_checker(number):
  if number%2!=0:
    print("Odd!!")
  elif number%2==0:
    print("Even!!")

result = even_checker(2)

#task2
def fibonacci(number):
  first_number =0
  second_number =1
  print(first_number,end=" ")
  print(second_number,end=" ")
  for i in range(0,100001):
    third_number= first_number+second_number
    if third_number>number:
      break
    else:
      print(third_number,end=" ")
      first_number=second_number
      second_number = third_number

fibonacci(10)

#asteric(*) can take multiple arguments
#if we do not know how many arguments will be passed to your function, we
#can add an asteric(*) before the parameter name in the function definition
def my_function(*kids):
  print("The childs are", kids[0],"and",kids[1] )

my_function("Digonto","Pratyasha","shopno")

def greet(name):
  print("Hello",name)
greet("Pratyasha") #there is only one argument so the we have to enter one value not two

def sum(value,*values): #i took two arguments thats why there is two arguments
  print(value)
sum(1000,399)

#return can return the value
def add_sub(x,y):
  c = x+y
  d = x-y
  return d

add_sub(5,8)

#task3
def foo_moo(n):
  if n%2==0:
    print("Foo")
  elif n%3==0:
    print("Moo")
  elif n%2==0 and n%3==0:
    print("FooMoo")
  else:
    print("Boo")
foo_moo(5)

#task4
def function_name(n):
  upper=0
  lower=0
  for i in n:
    if 97<=ord(i)<=122:
      lower+=1
    elif 65<=ord(i)<=90:
      upper+=1
  print(f"No. of Uppercase characters : {upper}")
  print(f"No. of Uppercase characters : {lower}")
function_name(input("Enter a string: "))

#task5
def calculate_tax(age, salary ,designation):
  if 18<age:
    if designation=="president":
      print(0)
    else:
      if salary>=10000:
        if 10000<=salary<=20000:
          print((salary*5)/100)
        elif 20000<salary:
          print((salary*10)/100)
      else:
        print(0)
  else:
    print(0)

age = int(input("Enter age: "))
salary = int(input("Enter salary: "))
desig = input("Enter ur designation: ")
calculate_tax( age, salary , desig)

#\n

#task6
def function_name(n):
  years=n//365
  sum=n%365
  months = sum//30
  days = sum%30
  print(f"{years} years, {months} months and {days} days")
function_name(4330)

#task7
def show_palindrome(n):
  star=" "
  for i in range(1,n+1):
    star+=str(i)
  for i in range(n-1,0,-1):
    star+=str(i)
  return star
print(show_palindrome(5))

def show_palindrome_triangle(num):
  for i in range(1,num+1):
    for j in range(1,num-i+1):
      print(" ",end=" ")
    print(show_palindrome(i))

show_palindrome_triangle(5)

#task7
def show_palindrome(n):
  star=" "
  for i in range(1,n+1):
    star+=str(i)
  for i in range(n-1,0,-1):
    star+=str(i)
  return star
print(show_palindrome(5))

#task8

def show_palindrome_triangle(num):
  for i in range(1,num+1):
    for j in range(1,num-i+1):
      print(" ",end=" ")
    print(show_palindrome(i))

show_palindrome_triangle(5)

#task8 ideal way
def show_palindrome(n):
  star=" "
  for i in range(1,n+1):
    star+=str(i)
    star+=" "
  for i in range(n-1,0,-1):
    star+=str(i)
    star+=" "
  return star
#print(show_palindrome(5))

#show_palindrome(5)
def show_palindrome_triangle(num):
  for i in range(1,num+1):
    for j in range(1,num-i+1):
      print(" ",end=" ")
    print(show_palindrome(i))


show_palindrome_triangle(5)

#task9
def area_circumference_generator(r):
  import math
  area = (math.pi)*r**2
  circ = 2*math.pi*r
  print(f"Area of the circle is {area} and circumference is {circ}")
area_circumference_generator(1)

#task10
def make_square(tup):
  x,y  = tup
  dic= {}
  for i in range(x,y+1):
    dic[i]=i**2
  print(dic)

make_square((5,9))

#task11
def rem_duplicate(var):
  lst = []
  var1 = list(var)
  for i in var1:
    if i not in lst:
      lst.append(i)
    else:
      pass
  return tuple(lst)

rem_duplicate((1,1,1,2,3,4,5,6,6,6,6,4,0,0,0))

#task12
def function_name(lst):
  lst2 =[]
  count=0
  for i in lst:
    if lst2.count(i)<2 :
      lst2.append(i)
    else:
      count+=1
  print("Removed:",count)
  return lst2

print(function_name([1, 2, 3, 3, 3, 3, 4, 5, 8, 8]))

#task13
def function_name(n,m,r):
  if n=="+":
    sum = m+r
    float(sum)
  elif n=="-":
    sum = m*r
    float(sum)
  elif n=="*":
    sum = m*r
    float(sum)
  elif n=="/":
    sum = m/r
    float(sum)
  return sum
print(function_name("*",5.5,2.5))

#task14
def function_name(sen,pos):
  new= ""
  rem =""
  for i in range(0,len(sen)):
    if i==0 or i%3!=0:
      new+=sen[i]
    else:
      rem+=sen[i]
  return (new+rem)

sen = input("Enter a sentence: ")
rem = int(input())
print(function_name(sen,rem))

order_items=input()
  order = order_items.strip("[").strip("]")
  order = order.split(", ")

  for i in order:
    print(i.lower)

def bazaar(order_items,location):
  order=order_items
  sum=0
  dic = {"Rice":105,"Potato":20,"Chicken":250,"Beef":510,"Oil":85}
  print(dic)

  if i==dic[i]:
        sum+=105
  elif i==dic[i] :
        sum+=20
  elif i==dic[i]:
        sum+=250
  elif i==dic[i]:
        sum+=510
  elif i==dic[i]:
        sum+=85

  print(sum)


bazaar(["Rice", "Beef", "Rice"],"Dhanmondi")

def memo(l,address="Dhanmondi"):
  chart = {"Rice":105,"Potato":20,"Chicken":250,"Beef":510,"Oil":85}
  sum=30
  for i in l:
    sum+=chart[i]
  if address.lower()!="dhanmondi":
    sum+=40
  print(sum)
memo(["Rice", "Beef","Rice"],"BRAC")

lst = input()
lst = lst[1:-1]
lst = lst.split(',')
location = 'Mohakhali'
def price(lst, location):
    price = 0
    dec = {"Rice":105,"Potato":20,"Chicken":250,"Beef":510,"Oil":85}
    for i in lst:
        if i in dec:
            price += dec[i]
        else:
            pass
    if location == 'Dhanmondi':
        price += 30
    else:
        price += 70
    return price
print(price(lst,location))

def bazaar(order_items,location):
  order = order_items.strip("[").strip("]")
  order = order.split(",")
  print(order)
  sum=0
  dic = {"Rice":105,"Potato":20,"Chicken":250,"Beef":510,",Oil":85}
  print(dic)
  for i in order:
    if i in dic:
      sum+=dic[i]
    else:
      pass
  if location=="Dhanmondi":
    sum+=30
  else:
    sum+=70

  print(sum)


bazaar(input(),"mohakhali")

#task16
def splitting_money(n):
  sum=int(n)//500
  sum2=int(n)%500
  sum3=sum2//100
  sum4=int(n)%100
  sum5=sum4//50
  sum6=int(n)%50
  sum7=sum6//20
  sum8=int(n)%20
  sum9 =sum8//10
  sum10=int(n)%10
  sum11=sum10//2
  sum12=int(n)%2
  all=f"500 Taka: {sum}(s)\n100 Taka: {sum3}(s)\n50 Taka : {sum5}(s)\n20 Taka: {sum7}(s)"
  all1 =f"\n10 Taka: {sum9}(s)\n2 Taka: {sum11}(s)\n1 Taka : {sum12}(s)"
  return all+all1
print(splitting_money(151))

#task17
def remove_odd(lst):
  lst2=[]
  for i in lst:
    if int(i)%2==0:
      lst2.append(i)
    else:
      pass
  return lst2


print(remove_odd([21, 33, 44, 66, 11, 1, 88, 45, 10, 9]))

#task17 with input
def remove_odd(lst):
  lst2=[]
  lst=lst.strip("[").strip("]").split(", ")
  for i in lst:
    if int(i)%2==0:
      lst2.append(int(i))
    else:
      pass
  return lst2

print(remove_odd(input()))

#task18

#task19
def function_name(x):
  s=x.lower()
  f="abcdefghij"
  for j in s:
      if j in f:
        result = 5
      else:
        result=6
  for char in range(result):
    print("PSG will win the Champions League this season")

function_name("A black jackal is hunting a full grown deer")

def check_alphabets(string):
    alphabets = 'abcdefghij'
    found_alphabets = ''
    for char in string:
        if char.lower() in alphabets and char.lower() not in found_alphabets:
            found_alphabets += char.lower()
            if found_alphabets == alphabets:
                return 5
    return 6

string = input("Enter a string: ")
result = check_alphabets(string)

for i in range(result):
    print("PSG will win the Champions League this season")

def check_alphabets(input_string):
    # Convert input string to lowercase
    input_string = input_string.lower()

    # Create a set to keep track of alphabets from a to j
    alphabets_set = set(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'])

    # Create a set to keep track of alphabets that appear in the input string
    appeared_set = set()

    # Loop through each character in the input string
    for char in input_string:
        # Check if the character is an alphabet from a to j
        if char in alphabets_set:
            # Add the character to the appeared set
            appeared_set.add(char)

            # If all alphabets have appeared, return 5
            if len(appeared_set) == len(alphabets_set):
                for i in range(5):
                    print("PSG will win the Champions League this season")
                return 5

    # If not all alphabets have appeared, return 6
    for i in range(6):
        print("PSG will win the Champions League this season")
    return 6

input_string = input("Enter a string: ")
check_alphabets(input_string)